apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: ci-cd-workflow-
spec:
  # Define workflow-level parameters
  arguments:
    parameters:
    # Git Repository Parameters
    - name: git-username
      value: "" # To be filled in or overridden
    - name: git-repo-name
      value: "" # To be filled in or overridden
    - name: git-full-repo-name
      value: "" # To be filled in or overridden

    # Docker/Container Registry Parameters
    - name: registry
      value: ghcr.io
    - name: docker-username
      value: "" # To be filled in or overridden
    - name: image-name
      value: "" # To be filled in or overridden

    # Version and Branch Parameters
    - name: branch
      value: main
    - name: version
      value: 1.0.0

  serviceAccountName: workflow-sa

  # Define volumes
  volumes:
  - name: repo-volume
    emptyDir: {} # Shared volume that persists between steps
  - name: version-volume
    persistentVolumeClaim:
      claimName: version-pvc # Persistent volume for versioning

  entrypoint: ci-cd-pipeline
  templates:
  - name: ci-cd-pipeline
    dag:
      tasks:
      - name: version-check
        template: version-check

      - name: clone-repo
        template: clone-repository
        depends: version-check.Succeeded && "{{tasks.version-check.outputs.result}}" ==
          "changed"

      - name: build-and-push
        template: build-container
        depends: clone-repo.Succeeded

      - name: cleanup
        template: clear-volume
        depends: build-and-push.Succeeded

  # Version check step
  - name: version-check
    container:
      image: ghcr.io/hellkaiser45/version-checker:1.0.0
      volumeMounts:
      - name: version-volume
        mountPath: /version-checker
      env:
      - name: REPO
        value: "{{workflow.parameters.git-full-repo-name}}"
      - name: GITHUB_TOKEN
        valueFrom:
          secretKeyRef:
            name: git-credentials
            key: token
      - name: FOLDER
        value: "."
      - name: BRANCH
        value: "{{workflow.parameters.branch}}"
      - name: OUTPUT_FOLDER
        value: "/version-checker"
    outputs:
      parameters:
      - name: result
        valueFrom:
          default: "unchanged"
          path: /tmp/outputs/result

  # Clone repository step
  - name: clone-repository
    container:
      image: ghcr.io/hellkaiser45/git-clone:1.0.0
      volumeMounts:
      - name: repo-volume
        mountPath: /workspace
      env:
      - name: GITHUB_USERNAME
        value: "{{workflow.parameters.git-username}}"
      - name: REPOSITORY_NAME
        value: "{{workflow.parameters.git-repo-name}}"
      - name: GITHUB_TOKEN
        valueFrom:
          secretKeyRef:
            name: git-credentials
            key: token
      - name: OUTPUT_DIR
        value: /workspace

  # Build and push container step
  - name: build-container
    container:
      image: ghcr.io/hellkaiser45/docker-build:1.0.0
      volumeMounts:
      - name: repo-volume
        mountPath: /workspace
      - name: version-volume
        mountPath: /version
      env:
      - name: REGISTRY
        value: ghcr.io
      - name: USERNAME
        value: "{{workflow.parameters.docker-username}}"
      - name: IMAGE_NAME
        value: "{{workflow.parameters.image-name}}"
      - name: VERSION
        value: "{{workflow.parameters.version}}"
      - name: GITHUB_TOKEN
        valueFrom:
          secretKeyRef:
            name: docker-credentials
            key: token
      - name: REPO_OWNER
        value: "{{workflow.parameters.git-username}}"
      - name: REPO_NAME
        value: "{{workflow.parameters.git-repo-name}}"

  # Cleanup step
  - name: clear-volume
    container:
      image: alpine
      command: [ sh, -c ]
      args: [ "rm -rf /workspace/*" ]
      volumeMounts:
      - name: repo-volume
        mountPath: /workspace
